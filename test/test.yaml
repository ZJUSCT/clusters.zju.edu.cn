# https://opentelemetry.io/docs/collector/configuration/
# https://github.com/open-telemetry/opentelemetry-collector/blob/main/examples/local/otel-config.yaml
# 节点上作为 agent 的 otel-collector，需要运行为 root
# Environment variables:
# - OTEL_BEARER_TOKEN
# - OTEL_COLLECTOR_ENDPOINT

extensions:
# https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/extension/bearertokenauthextension
#  bearertokenauth:
#    token: ${OTEL_BEARER_TOKEN}

receivers:
#  otlp:
#    protocols: 
#      # default to localhost
#      grpc:
#        endpoint: "0.0.0.0:4317"
#      http:
#        endpoint: "0.0.0.0:4318"
  filelog/docker:
    include: /var/lib/docker/containers/*/*-json.log
    start_at: beginning
    operators:
      - type: container
        format: docker
        add_metadata_from_filepath: false
      - type: key_value_parser
        parse_from: attributes.attrs.tag
        parse_to: resource
        if: 'type(attributes.attrs) != "nil"'
      - type: remove
        field: attributes.attrs
        if: 'type(attributes.attrs) != "nil"'
      
processors:
  batch:
  memory_limiter:
    limit_mib: 1536
    spike_limit_mib: 512
    check_interval: 5s
  resource:
    attributes:
    - key: host.name
      value: "testbench"
      action: upsert

exporters:
  debug/detailed:
    # basic, normal, detailed
    verbosity: detailed
  debug/basic:
    verbosity: basic
  #otlphttp/with_auth:
  #  endpoint: https://otel.clusters.zjusct.io
  #  auth:
  #    authenticator: bearertokenauth
  file:
    path: /tmp/otel-output.json
  

service:
#  extensions: [bearertokenauth]
  pipelines:
    logs:
      receivers: [filelog/docker]
      processors: [memory_limiter, batch, resource]
#      exporters: [otlphttp/with_auth, debug]
      exporters: [debug/basic, file]
#    traces:
#      receivers: [otlp]
#      processors: [memory_limiter, batch, resource]
#      exporters: [debug]
#    metrics:
#      receivers: [otlp]
#      processors: [memory_limiter, batch, resource]
#      exporters: [debug]
