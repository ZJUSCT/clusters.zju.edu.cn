# https://opentelemetry.io/docs/collector/configuration/
# https://github.com/open-telemetry/opentelemetry-collector/blob/main/examples/local/otel-config.yaml
# Version: otelcol-contrib v0.111.0
# Date: 2024-10-14
# Environment Variables should be set in .env:
#
#   OTEL_BEARER_TOKEN=
#   SNMP_AUTH_KEY=
#   SNMP_PRIVATE_KEY=
#
# and docker compose file:
#
#   environment:
#     - OTEL_BEARER_TOKEN=${OTEL_BEARER_TOKEN}

extensions:
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/extension/healthcheckextension
  health_check:
    endpoint: 0.0.0.0:13133
    response_body:
      healthy: "ok"
  pprof:
    endpoint: otelcol-gateway:1777
  zpages:
    endpoint: otelcol-gateway:55679
  bearertokenauth:
    token: ${OTEL_BEARER_TOKEN}

receivers:
  # https://github.com/open-telemetry/opentelemetry-collector/tree/main/receiver/otlpreceiver
  otlp/with_auth:
    protocols:
      http:
        endpoint: otelcol-gateway:4318
        auth:
          authenticator: bearertokenauth
  otlp/internal:
    protocols:
      grpc:
        endpoint: otelcol-gateway:4317
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver/syslogreceiver
  syslog:
    udp:
      listen_address: otelcol-gateway:514
      add_attributes: true
      one_log_per_packet: true
    protocol: rfc3164
    # we configure all infrastructure to use the same timezone UTC +8
    location: Asia/Shanghai
    #operators:
    #  - type: router
    #    routes:
    #      - output: huawei_add_resource
    #        # before escape: %%\d+[^\/]+\/\d+\/.+\(.+\)
    #        expr: 'attributes.appname matches "%%\\d+[^\\/]+\\/\\d+\\/.+\\(.+\\)"'
    #    default: noop
    #  - id: huawei_add_resource
    #    type: add
    #    field: resource.device.manufacturer
    #    value: Huawei
    #    output: huawei_regex_parser
    #  - id: huawei_regex_parser
    #    type: regex_parser
    #    parse_from: attributes.appname
    #    parse_to: attributes.huawei
    #    regex: '%%(?P<version>\d+)(?P<module_name>[^\/]+)\/(?P<serverity>\d+)\/(?P<brief>.+)\((?P<type>.+)\)'
    #  - id: noop
    #    type: noop
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver/collectdreceiver
  #  collectd:

processors:
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/processor/resourceprocessor
  resource/cloud:
    attributes:
      - key: cloud.region
        value: "zjusct-cluster"
        action: insert
  # https://github.com/open-telemetry/opentelemetry-collector/tree/main/processor/batchprocessor
  batch:
  # https://github.com/open-telemetry/opentelemetry-collector/tree/main/processor/memorylimiterprocessor
  memory_limiter:
    check_interval: 1s
    limit_percentage: 50
    spike_limit_percentage: 30

exporters:
  # https://github.com/open-telemetry/opentelemetry-collector/tree/main/exporter/debugexporter
  debug:
    # basic, normal, detailed
    verbosity: basic
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter/clickhouseexporter
  clickhouse:
    endpoint: clickhouse://clickhouse:9000
    ttl: 4320h
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter/prometheusexporter
  #  prometheus:
  #    endpoint: otelcol:9090
  #    send_timestamps: true
  #    resource_to_telemetry_conversion:
  #      enabled: true
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter/prometheusremotewriteexporter
  prometheusremotewrite:
    endpoint: http://prometheus:9090/api/v1/write
    # wal cause error, do not use
    # wal:
    resource_to_telemetry_conversion:
      enabled: true
    retry_on_failure:
      enabled: true
      initial_interval: 10s
      max_interval: 60s
      max_elapsed_time: 10m
    # to be same with prometheus exporter
    add_metric_suffixes: true
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter/elasticsearchexporter
  elasticsearch:
    endpoint: http://elasticsearch:9200
# https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter/fileexporter
#file:
#  path: /test/otel-collector.json
# https://github.com/open-telemetry/opentelemetry-collector/tree/main/exporter/nopexporter
#nop:

service:
  extensions: [health_check, pprof, zpages, bearertokenauth]
  pipelines:
    logs:
      receivers: [otlp/with_auth, otlp/internal]
      processors: [memory_limiter, batch, resource/cloud]
      exporters: [clickhouse, elasticsearch]
    traces:
      receivers: [otlp/with_auth, otlp/internal]
      processors: [memory_limiter, batch, resource/cloud]
      exporters: [clickhouse, elasticsearch]
    metrics:
      receivers: [otlp/with_auth, otlp/internal]
      processors: [memory_limiter, batch, resource/cloud]
      exporters: [prometheusremotewrite]
    logs/syslog:
      receivers: [syslog]
      processors: [memory_limiter, batch, resource/cloud]
      exporters: [clickhouse, elasticsearch]
